@page
@using PRN221_Project.Models;
@model PRN221_Project.Pages.Seats.SeatManagementModel
@{
    Layout = "_Layout _Admin";
    ViewData["Title"] = "Seat Management";
    var seatDictionary = Model.Room.Seats.ToDictionary(s => (s.SeatRow, s.SeatCol));
}


<style>
    #seat-grid {
        display: grid;
        justify-content: center;
        overflow-x: auto;
    }

    .seat {
        height: 35px;
        width: 35px;
        border: 1px solid black;
        cursor: pointer;
        margin: 5px;
        background: rgba(0, 0, 0, 0)
    }
</style>


<div class="container-fluid p-2">
    <h1 class="text-center mb-3">@ViewData["Title"]</h1>

    <div class="row">
        <div class="m-0">
            <label for="seatType" class="fs-5">Select Seat Type:</label>
        </div>
        <div class="align-content-center">
            <select class="form-select" id="seatType">
                @foreach (SeatType st in Model.SeatType)
                {
                    <option value="@st.Id" data-color="@st.SeatColor" data-type="">@st.Name</option>
                }
            </select>
        </div>
    </div>

    <div class="row p-2 form-control m-2">
        <div class="m-0">
            <label class="fs-5">Choose naming option:</label>
        </div>
        <div class="d-flex">
            <div>
                <div class="m-0">
                    <label class="fs-6">Choose Column Direction:</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="ColumnDirection" id="ColumnDirection1" checked>
                    <label class="form-check-label" for="ColumnDirection1">
                        Left To Right <i class="bi bi-arrow-right"></i>
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="ColumnDirection" id="ColumnDirection2">
                    <label class="form-check-label" for="ColumnDirection2">
                        Right To Left <i class="bi bi-arrow-left"></i>
                    </label>
                </div>
            </div>
            <div class="">
                <div class="m-0">
                    <label class="fs-6">Choose Row Direction:</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="RowDirection" id="RowDirection1" checked>
                    <label class="form-check-label" for="RowDirection1">
                        Up To Down <i class="bi bi-arrow-down"></i>
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="RowDirection" id="RowDirection2">
                    <label class="form-check-label" for="RowDirection2">
                        Down To Up <i class="bi bi-arrow-up"></i>
                    </label>
                </div>
            </div>
        </div>

        <button class="btn btn-primary w-auto m-2" id="assignName">Assign</button>
    </div>

    <div class="mt-2">
        <h4 class="text-center m-0">Screen</h4>
        <div class="d-flex justify-content-center">
            <hr class="bg-black w-50" size="6" />
        </div>

    </div>

    <div class="row mb-4 mt-2">
        <div id="seat-grid">
            @for (int col = 0; col < Model.Room.NumberOfCols; col++)
            {
                <div class="grid-col">
                    @for (int row = 0; row < Model.Room.NumberOfRows; row++)
                    {
                        var seatKey = (row, col);
                        if (seatDictionary.TryGetValue(seatKey, out var seat))
                        {

                            <div class="seat" data-row="@row" data-col="@col" data-seatTypeId="@seat.SeatTypeId" data-available="true" style="background-color: @seat.SeatType.SeatColor;">@seat.SeatName</div>

                        }
                        else
                        {
                            <div class="seat" data-row="@row" data-col="@col" data-seatTypeId="" data-available="true"></div>
                        }
                    }
                </div>
            }
        </div>
    </div>

    <div class="row d-flex justify-content-center mt-5">
        @Html.AntiForgeryToken()
        <button id="saveButton" class="btn btn-info w-50">Save</button>
    </div>

</div>

@section Scripts {
<script type="text/javascript">
    var roomId = @Model.Room.Id;
    document.getElementById("seat-grid").setAttribute('style', 'grid-template-columns: repeat(' + @Model.Room.NumberOfCols + ', 40px)');
</script>

<script type="text/javascript" src="~/js/SeatManagement.js"></script>
}


